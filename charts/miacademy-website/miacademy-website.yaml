---
# Source: miacademy-website/templates/headless-service.yaml
apiVersion: v1
kind: Service
metadata:
  namespace: test
  name: miacademy-website-headless
  labels:
    helm.sh/chart: miacademy-website-0.1.0
    app.kubernetes.io/name: miacademy-website
    app.kubernetes.io/instance: miacademy-website-test
    app.kubernetes.io/version: "1.16.0"
    app.kubernetes.io/managed-by: Helm
    
spec:
  clusterIP: None
  ports:
    - port: 80
      targetPort: http
      protocol: TCP
      name: http
  selector:
    app.kubernetes.io/name: miacademy-website
    app.kubernetes.io/instance: miacademy-website-test
---
# Source: miacademy-website/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  namespace: test
  name: miacademy-website
  labels:
    helm.sh/chart: miacademy-website-0.1.0
    app.kubernetes.io/name: miacademy-website
    app.kubernetes.io/instance: miacademy-website-test
    app.kubernetes.io/version: "1.16.0"
    app.kubernetes.io/managed-by: Helm
    
spec:
  type: ClusterIP
  ports:
    - port: 80
      targetPort: http
      protocol: TCP
      name: http
  selector:
    app.kubernetes.io/name: miacademy-website
    app.kubernetes.io/instance: miacademy-website-test
---
# Source: miacademy-website/templates/statefulset.yaml
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name : miacademy-website
  annotations:
    
    {}
  labels:
    helm.sh/chart: miacademy-website-0.1.0
    app.kubernetes.io/name: miacademy-website
    app.kubernetes.io/instance: miacademy-website-test
    app.kubernetes.io/version: "1.16.0"
    app.kubernetes.io/managed-by: Helm
    
  namespace: test
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: miacademy-website
      app.kubernetes.io/instance: miacademy-website-test
  updateStrategy:
    type: RollingUpdate
  serviceName: miacademy-website-headless
  podManagementPolicy: OrderedReady
  persistentVolumeClaimRetentionPolicy:
    whenDeleted: Retain
    whenScaled: Retain
  template:
    metadata:
      labels:
        helm.sh/chart: miacademy-website-0.1.0
        app.kubernetes.io/name: miacademy-website
        app.kubernetes.io/instance: miacademy-website-test
        app.kubernetes.io/version: "1.16.0"
        app.kubernetes.io/managed-by: Helm
        
      annotations:
        
        {}
    spec:
      terminationGracePeriodSeconds: 10
      automountServiceAccountToken: true
      imagePullSecrets:
        - name: miaplaza-website-registry
        - name: infrastructure-postgresql-registry
        - name: infrastructure-nginx-registry
      initContainers:
        - name: assets
          image: "registry.dev.miaplaza.com/miaplaza/website/assets:11-6-0"
          imagePullPolicy: Always
          volumeMounts:
            - mountPath: /wwwroot
              name: assets
      securityContext:
        fsGroup: 33
        runAsGroup: 33
        runAsUser: 33
      volumes:
        - emptyDir: {}
          name: assets
        - emptyDir: {}
          name: cache
        - name: google-cloud-credentials
          secret:
            defaultMode: 420
            secretName: google-service-account-key-kestrel
      containers:
        - name: nginx
          securityContext:
            runAsUser: 0
          image: "registry.dev.miaplaza.com/infrastructure/nginx:1-9-0"
          imagePullPolicy: IfNotPresent
          volumeMounts:
            - mountPath: /wwwroot
              name: assets
              readOnly: true
            - mountPath: /wwwroot/uploads
              name: uploads
              readOnly: true
            - mountPath: /wwwroot/cache
              name: cache
              readOnly: true
          env:    
            - name: FLAVOUR
              value: "miacademy.co"
            - name: PASSWORD
              value: "No Password"
            - name: ENVIRONMENT
              value: "Production"
          ports:
            - containerPort: 80
              name: http
              protocol: TCP
        - name: kestrel
          securityContext:
            capabilities:
              add:
              - SYS_PTRACE
            runAsGroup: 33
            runAsUser: 33
          image: "registry.dev.miaplaza.com/miaplaza/website/kestrel:11-6-0"
          imagePullPolicy: Always
          volumeMounts:
            - mountPath: /wwwroot
              name: assets
              readOnly: true
            - mountPath: /kestrel/uploads
              name: uploads
            - mountPath: /kestrel/regulator
              name: regulator
            - mountPath: /kestrel/cache
              name: cache
            - mountPath: /kestrel/keys
              name: keys
            - mountPath: /etc/google-cloud-credentials
              name: google-cloud-credentials
          env:    
            - name: MIA_BraintreePrivateKey
              valueFrom:
                secretKeyRef:
                  name: braintree-production
                  key: BraintreePrivateKey
                  optional: false
            - name: MIA_GoogleAnalytics__MeasurementAPISecret
              valueFrom:
                secretKeyRef:
                  name: miacademy-website-google-analytics
                  key: MeasurementAPISecret
                  optional: false
            - name: __REDIS_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: miacademy-website-redis
                  key: redis-password
                  optional: false
            - name: __MAIN_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: miacademy-website-main
                  key: postgresql-password
                  optional: false
            - name: __WRITEMOSTLY_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: miacademy-website-writemostly
                  key: postgresql-password
                  optional: false
            - name: AWS_ACCESS_KEY_ID
              valueFrom:
                secretKeyRef:
                  name: aws
                  key: access-key-id
                  optional: false
            - name: AWS_SECRET_ACCESS_KEY
              valueFrom:
                secretKeyRef:
                  name: aws
                  key: secret-access-key
                  optional: false
            - name: MIA_RedisConnectionString
              value: "miacademy-redis-master,password=$(__REDIS_PASSWORD)"
            - name: MIA_MiddleMail__Client__RabbitMQ__ConnectionString
              value: "host=middlemail-rabbitmq.default;username=user;password=$(__MIDDLEMAIL_PASSWORD)"
          ports:
            - containerPort: 5000
              name: http
              protocol: TCP
            - containerPort: 9090
              name: metrics
              protocol: TCP
          livenessProbe:
            failureThreshold: 6
            httpGet:
              path: /health
              port: http
              scheme: HTTP
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 60
  volumeClaimTemplates:
    - metadata:
        name: keys
      spec:
        accessModes:
        - ReadWriteOnce
        resources:
          requests:
            storage: 50Mi
        volumeMode: Filesystem
    - metadata:
        name: uploads
      spec:
        accessModes:
        - ReadWriteOnce
        resources:
          requests:
            storage: 512Gi
        volumeMode: Filesystem
    - metadata:
        name: regulator
      spec:
        accessModes:
        - ReadWriteOnce
        resources:
          requests:
            storage: 1Gi
        volumeMode: Filesystem
